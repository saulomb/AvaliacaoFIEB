// <auto-generated />
using System;
using Avaliacao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avaliacao.Data.Migrations
{
    [DbContext(typeof(AvaliacaoContext))]
    partial class AvaliacaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avaliacao.Domain.RH.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("FuncionarioCargo");
                });

            modelBuilder.Entity("Avaliacao.Domain.RH.Escala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiaDaSemana")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnName("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnName("HoraInicio")
                        .HasColumnType("time(7)");

                    b.Property<TimeSpan>("HoraTermino")
                        .HasColumnName("HoraTermino")
                        .HasColumnType("time(7)");

                    b.Property<int>("TempoDescanso")
                        .HasColumnName("TempoDescanso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FuncionarioEscala");
                });

            modelBuilder.Entity("Avaliacao.Domain.RH.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnName("Categoria")
                        .HasColumnType("char(1)");

                    b.Property<string>("Cpf")
                        .HasColumnName("Cpf")
                        .HasColumnType("char(11)");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Habilitacao")
                        .HasColumnName("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("Salario")
                        .HasColumnName("Salario")
                        .HasColumnType("money");

                    b.Property<string>("Telefone")
                        .HasColumnName("Telefone")
                        .HasColumnType("char(11)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Avaliacao.Domain.RH.Escala", b =>
                {
                    b.HasOne("Avaliacao.Domain.RH.Funcionario", "Funcionario")
                        .WithMany("EscalaSemanal")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Avaliacao.Domain.RH.Funcionario", b =>
                {
                    b.HasOne("Avaliacao.Domain.RH.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Avaliacao.Domain.RH.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("FuncionarioId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Cep")
                                .HasColumnName("Cep")
                                .HasColumnType("char(10)");

                            b1.Property<string>("Cidade")
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(80)");

                            b1.Property<string>("Complemento")
                                .HasColumnName("Complemento")
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Estado")
                                .HasColumnName("Estado")
                                .HasColumnType("char(2)");

                            b1.Property<string>("Logradouro")
                                .HasColumnName("Logradouro")
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Numero")
                                .HasColumnName("Numero")
                                .HasColumnType("varchar(10)");

                            b1.HasKey("FuncionarioId");

                            b1.ToTable("Funcionario");

                            b1.WithOwner()
                                .HasForeignKey("FuncionarioId");
                        });

                    b.OwnsOne("Avaliacao.Domain.RH.LinguaEstrangeira", "LinguaEstrangeira", b1 =>
                        {
                            b1.Property<int>("FuncionarioId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("Espanhol")
                                .HasColumnName("Espanhol")
                                .HasColumnType("bit");

                            b1.Property<bool>("Frances")
                                .HasColumnName("Frances")
                                .HasColumnType("bit");

                            b1.Property<bool>("Ingles")
                                .HasColumnName("Ingles")
                                .HasColumnType("bit");

                            b1.HasKey("FuncionarioId");

                            b1.ToTable("Funcionario");

                            b1.WithOwner()
                                .HasForeignKey("FuncionarioId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
